# Docker Compose file that brings up containers necessary for demo.search.org which includes CCH demo stuff
# To run:  docker-compose -f ojbc-cerbot-test.yaml up -d
#
# To run the ojbc-cerbot container interactivrly with bash:
#
# docker run -it --rm --mount type=bind,source=/apache-certs,target=/apache-certs --mount type=bind,source=/apache-webroot,target=/apache-webroot --mount type=bind,source=/opt/data/search/docker-mounts/letsencrypt-etc,target=/etc/letsencrypt --name cerbot ojbc/certbot bash
# 
# To setup a certificate with demo.search.org
# certbot certonly --webroot -w /apache-webroot -d demo.search.org -m jdougla03@gmail.com --agree-tos -n 
#
# To renew a certificate
#
# certbot certonly --force-renewal --webroot -w /apache-webroot -d demo.search.org  -n
#
# cp /opt/data/search/docker-mounts/letsencrypt-etc/live/demo.search.org/*.pem /opt/data/search/docker-mounts/demo.search.org
# 

version: "3.2"

networks:
   demo-test:
     ipam:
       config:
         - subnet: 172.25.0.0/16
services:

# Create the cerbot image (see above command to run container in interactive mode
  certbot:
    container_name: ojbc-certbot
    image: ojbc/ojbc-certbot
    build: ./ojbc-certbot

# Create/Run the apache proxy container
  demo-search-proxy-test:
    container_name: demo-search-proxy-test
    image: ojbc/maine-demo-search-proxy-test
    build: ./demo-search-proxy-test
    networks:
      - demo-test
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - type: volume
        source: apache-certs
        target: "/apache-certs"
      - type: volume
        source: apache-webroot
        target: "/usr/local/apache2/htdocs"        
 # Certs are saved in  /opt/data/search/docker-mounts/letsencrypt-etc 
        
volumes: 
  apache-certs:
  apache-webroot:  